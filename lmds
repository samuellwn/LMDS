#!/usr/bin/python3

import os
import sys
sys.path.insert(0, '/usr/share/lmds')
# Don't use this anywhere else. We make an exception
# because module lmds is the core of this software.
from lmds import *
from signal import signal, SIGINT, SIGQUIT, SIGTERM

def main():
    # register signal handlers
    signal(SIGINT, exitHandler)
    signal(SIGQUIT, exitHandler)
    signal(SIGTERM, exitHandler)

    # add locations for plug-ins to the module search path
    sys.path.insert(0, '/usr/share/lmds/plugins')
    sys.path.insert(0, '/usr/local/share/lmds/plugins')
    sys.path.insert(0, os.getenv('HOME') + '/.lmds/plugins')

    # load config
    localConfig = os.getenv('HOME') + '/.lmds/lmds.conf'
    globalConfig = '/etc/lmds.conf'
    if Path(localConfig).is_file():
        with open(localConfig) as f:
            exec(compile(f.read(), localConfig, 'exec'))
    elif Path(globalConfig).is_file():
        with open(globalConfig) as f:
            exec(compile(f.read(), globalConfig, 'exec'))
    else:
        print("Error: cannot find config file")
        exit(1)

    while(True):
        event.wait()
        if event.is_set(events.newMessage):
            for input in inputs:
                input.processMessages(5)
        if event.is_set(events.done):
            break

    for f in exitFunctions:
        f()

    
    
if __name__ == "__main__":
    main()
